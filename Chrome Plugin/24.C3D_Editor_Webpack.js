"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[24],{9024:(t,e,s)=>{s.d(e,{OBJLoader:()=>g});var o=s(9451);const i=/^[og]\s*(.+)?/,n=/^mtllib /,r=/^usemtl /,a=/^usemap /,l=/\s+/,c=new o.Vector3,h=new o.Vector3,u=new o.Vector3,p=new o.Vector3,d=new o.Vector3,m=new o.Color;function f(){const t={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(t,e){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=t,void(this.object.fromDeclaration=!1!==e);const s=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:!1!==e,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(t,e){const s=this._finalize(!1);s&&(s.inherited||s.groupCount<=0)&&this.materials.splice(s.index,1);const o={index:this.materials.length,name:t||"",mtllib:Array.isArray(e)&&e.length>0?e[e.length-1]:"",smooth:void 0!==s?s.smooth:this.smooth,groupStart:void 0!==s?s.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(t){const e={index:"number"==typeof t?t:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return e.clone=this.clone.bind(e),e}};return this.materials.push(o),o},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(t){const e=this.currentMaterial();if(e&&-1===e.groupEnd&&(e.groupEnd=this.geometry.vertices.length/3,e.groupCount=e.groupEnd-e.groupStart,e.inherited=!1),t&&this.materials.length>1)for(let t=this.materials.length-1;t>=0;t--)this.materials[t].groupCount<=0&&this.materials.splice(t,1);return t&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),e}},s&&s.name&&"function"==typeof s.clone){const t=s.clone(0);t.inherited=!0,this.object.materials.push(t)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(t,e){const s=parseInt(t,10);return 3*(s>=0?s-1:s+e/3)},parseNormalIndex:function(t,e){const s=parseInt(t,10);return 3*(s>=0?s-1:s+e/3)},parseUVIndex:function(t,e){const s=parseInt(t,10);return 2*(s>=0?s-1:s+e/2)},addVertex:function(t,e,s){const o=this.vertices,i=this.object.geometry.vertices;i.push(o[t+0],o[t+1],o[t+2]),i.push(o[e+0],o[e+1],o[e+2]),i.push(o[s+0],o[s+1],o[s+2])},addVertexPoint:function(t){const e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addVertexLine:function(t){const e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,s){const o=this.normals,i=this.object.geometry.normals;i.push(o[t+0],o[t+1],o[t+2]),i.push(o[e+0],o[e+1],o[e+2]),i.push(o[s+0],o[s+1],o[s+2])},addFaceNormal:function(t,e,s){const o=this.vertices,i=this.object.geometry.normals;c.fromArray(o,t),h.fromArray(o,e),u.fromArray(o,s),d.subVectors(u,h),p.subVectors(c,h),d.cross(p),d.normalize(),i.push(d.x,d.y,d.z),i.push(d.x,d.y,d.z),i.push(d.x,d.y,d.z)},addColor:function(t,e,s){const o=this.colors,i=this.object.geometry.colors;void 0!==o[t]&&i.push(o[t+0],o[t+1],o[t+2]),void 0!==o[e]&&i.push(o[e+0],o[e+1],o[e+2]),void 0!==o[s]&&i.push(o[s+0],o[s+1],o[s+2])},addUV:function(t,e,s){const o=this.uvs,i=this.object.geometry.uvs;i.push(o[t+0],o[t+1]),i.push(o[e+0],o[e+1]),i.push(o[s+0],o[s+1])},addDefaultUV:function(){const t=this.object.geometry.uvs;t.push(0,0),t.push(0,0),t.push(0,0)},addUVLine:function(t){const e=this.uvs;this.object.geometry.uvs.push(e[t+0],e[t+1])},addFace:function(t,e,s,o,i,n,r,a,l){const c=this.vertices.length;let h=this.parseVertexIndex(t,c),u=this.parseVertexIndex(e,c),p=this.parseVertexIndex(s,c);if(this.addVertex(h,u,p),this.addColor(h,u,p),void 0!==r&&""!==r){const t=this.normals.length;h=this.parseNormalIndex(r,t),u=this.parseNormalIndex(a,t),p=this.parseNormalIndex(l,t),this.addNormal(h,u,p)}else this.addFaceNormal(h,u,p);if(void 0!==o&&""!==o){const t=this.uvs.length;h=this.parseUVIndex(o,t),u=this.parseUVIndex(i,t),p=this.parseUVIndex(n,t),this.addUV(h,u,p),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(t){this.object.geometry.type="Points";const e=this.vertices.length;for(let s=0,o=t.length;s<o;s++){const o=this.parseVertexIndex(t[s],e);this.addVertexPoint(o),this.addColor(o)}},addLineGeometry:function(t,e){this.object.geometry.type="Line";const s=this.vertices.length,o=this.uvs.length;for(let e=0,o=t.length;e<o;e++)this.addVertexLine(this.parseVertexIndex(t[e],s));for(let t=0,s=e.length;t<s;t++)this.addUVLine(this.parseUVIndex(e[t],o))}};return t.startObject("",!1),t}class g extends o.Loader{constructor(t){super(t),this.materials=null}load(t,e,s,i){const n=this,r=new o.FileLoader(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,(function(s){try{e(n.parse(s))}catch(e){i?i(e):console.error(e),n.manager.itemError(t)}}),s,i)}setMaterials(t){return this.materials=t,this}parse(t){const e=new f;-1!==t.indexOf("\r\n")&&(t=t.replace(/\r\n/g,"\n")),-1!==t.indexOf("\\\n")&&(t=t.replace(/\\\n/g,""));const s=t.split("\n");let c=[];for(let t=0,o=s.length;t<o;t++){const o=s[t].trimStart();if(0===o.length)continue;const h=o.charAt(0);if("#"!==h)if("v"===h){const t=o.split(l);switch(t[0]){case"v":e.vertices.push(parseFloat(t[1]),parseFloat(t[2]),parseFloat(t[3])),t.length>=7?(m.setRGB(parseFloat(t[4]),parseFloat(t[5]),parseFloat(t[6])).convertSRGBToLinear(),e.colors.push(m.r,m.g,m.b)):e.colors.push(void 0,void 0,void 0);break;case"vn":e.normals.push(parseFloat(t[1]),parseFloat(t[2]),parseFloat(t[3]));break;case"vt":e.uvs.push(parseFloat(t[1]),parseFloat(t[2]))}}else if("f"===h){const t=o.slice(1).trim().split(l),s=[];for(let e=0,o=t.length;e<o;e++){const o=t[e];if(o.length>0){const t=o.split("/");s.push(t)}}const i=s[0];for(let t=1,o=s.length-1;t<o;t++){const o=s[t],n=s[t+1];e.addFace(i[0],o[0],n[0],i[1],o[1],n[1],i[2],o[2],n[2])}}else if("l"===h){const t=o.substring(1).trim().split(" ");let s=[];const i=[];if(-1===o.indexOf("/"))s=t;else for(let e=0,o=t.length;e<o;e++){const o=t[e].split("/");""!==o[0]&&s.push(o[0]),""!==o[1]&&i.push(o[1])}e.addLineGeometry(s,i)}else if("p"===h){const t=o.slice(1).trim().split(" ");e.addPointGeometry(t)}else if(null!==(c=i.exec(o))){const t=(" "+c[0].slice(1).trim()).slice(1);e.startObject(t)}else if(r.test(o))e.object.startMaterial(o.substring(7).trim(),e.materialLibraries);else if(n.test(o))e.materialLibraries.push(o.substring(7).trim());else if(a.test(o))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===h){if(c=o.split(" "),c.length>1){const t=c[1].trim().toLowerCase();e.object.smooth="0"!==t&&"off"!==t}else e.object.smooth=!0;const t=e.object.currentMaterial();t&&(t.smooth=e.object.smooth)}else{if("\0"===o)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+o+'"')}}e.finalize();const h=new o.Group;if(h.materialLibraries=[].concat(e.materialLibraries),!0==!(1===e.objects.length&&0===e.objects[0].geometry.vertices.length))for(let t=0,s=e.objects.length;t<s;t++){const s=e.objects[t],i=s.geometry,n=s.materials,r="Line"===i.type,a="Points"===i.type;let l=!1;if(0===i.vertices.length)continue;const c=new o.BufferGeometry;c.setAttribute("position",new o.Float32BufferAttribute(i.vertices,3)),i.normals.length>0&&c.setAttribute("normal",new o.Float32BufferAttribute(i.normals,3)),i.colors.length>0&&(l=!0,c.setAttribute("color",new o.Float32BufferAttribute(i.colors,3))),!0===i.hasUVIndices&&c.setAttribute("uv",new o.Float32BufferAttribute(i.uvs,2));const u=[];for(let t=0,s=n.length;t<s;t++){const s=n[t],i=s.name+"_"+s.smooth+"_"+l;let c=e.materials[i];if(null!==this.materials)if(c=this.materials.create(s.name),!r||!c||c instanceof o.LineBasicMaterial){if(a&&c&&!(c instanceof o.PointsMaterial)){const t=new o.PointsMaterial({size:10,sizeAttenuation:!1});o.Material.prototype.copy.call(t,c),t.color.copy(c.color),t.map=c.map,c=t}}else{const t=new o.LineBasicMaterial;o.Material.prototype.copy.call(t,c),t.color.copy(c.color),c=t}void 0===c&&(c=r?new o.LineBasicMaterial:a?new o.PointsMaterial({size:1,sizeAttenuation:!1}):new o.MeshPhongMaterial,c.name=s.name,c.flatShading=!s.smooth,c.vertexColors=l,e.materials[i]=c),u.push(c)}let p;if(u.length>1){for(let t=0,e=n.length;t<e;t++){const e=n[t];c.addGroup(e.groupStart,e.groupCount,t)}p=r?new o.LineSegments(c,u):a?new o.Points(c,u):new o.Mesh(c,u)}else p=r?new o.LineSegments(c,u[0]):a?new o.Points(c,u[0]):new o.Mesh(c,u[0]);p.name=s.name,h.add(p)}else if(e.vertices.length>0){const t=new o.PointsMaterial({size:1,sizeAttenuation:!1}),s=new o.BufferGeometry;s.setAttribute("position",new o.Float32BufferAttribute(e.vertices,3)),e.colors.length>0&&void 0!==e.colors[0]&&(s.setAttribute("color",new o.Float32BufferAttribute(e.colors,3)),t.vertexColors=!0);const i=new o.Points(s,t);h.add(i)}return h}}}}]);