"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[434],{1434:(t,e,n)=>{n.d(e,{PLYExporter:()=>r});var i=n(9451);class r{parse(t,e,n={}){function r(e){t.traverse((function(t){if(!0===t.isMesh||t.isPoints){const n=t,i=n.geometry;!0===i.hasAttribute("position")&&e(n,i)}}))}const o=(n=Object.assign({binary:!1,excludeAttributes:[],littleEndian:!1},n)).excludeAttributes;let l=!0,a=!1,u=!1,s=!1,f=0,c=0;t.traverse((function(t){if(!0===t.isMesh){const e=t.geometry,n=e.getAttribute("position"),i=e.getAttribute("normal"),r=e.getAttribute("uv"),o=e.getAttribute("color"),l=e.getIndex();if(void 0===n)return;f+=n.count,c+=l?l.count/3:n.count/3,void 0!==i&&(a=!0),void 0!==r&&(s=!0),void 0!==o&&(u=!0)}else if(t.isPoints){const e=t.geometry,n=e.getAttribute("position"),i=e.getAttribute("normal"),r=e.getAttribute("color");f+=n.count,void 0!==i&&(a=!0),void 0!==r&&(u=!0),l=!1}}));const d=new i.Color;if(l=l&&-1===o.indexOf("index"),a=a&&-1===o.indexOf("normal"),u=u&&-1===o.indexOf("color"),s=s&&-1===o.indexOf("uv"),l&&c!==Math.floor(c))return console.error("PLYExporter: Failed to generate a valid PLY file with triangle indices because the number of indices is not divisible by 3."),null;let p=`ply\nformat ${n.binary?n.littleEndian?"binary_little_endian":"binary_big_endian":"ascii"} 1.0\nelement vertex ${f}\nproperty float x\nproperty float y\nproperty float z\n`;!0===a&&(p+="property float nx\nproperty float ny\nproperty float nz\n"),!0===s&&(p+="property float s\nproperty float t\n"),!0===u&&(p+="property uchar red\nproperty uchar green\nproperty uchar blue\n"),!0===l&&(p+=`element face ${c}\nproperty list uchar int vertex_index\n`),p+="end_header\n";const g=new i.Vector3,b=new i.Matrix3;let y=null;if(!0===n.binary){const t=(new TextEncoder).encode(p),e=f*(12+(a?12:0)+(u?3:0)+(s?8:0)),i=l?13*c:0,o=new DataView(new ArrayBuffer(t.length+e+i));new Uint8Array(o.buffer).set(t,0);let x=t.length,m=t.length+e,A=0;r((function(t,e){const i=e.getAttribute("position"),r=e.getAttribute("normal"),f=e.getAttribute("uv"),c=e.getAttribute("color"),p=e.getIndex();b.getNormalMatrix(t.matrixWorld);for(let e=0,l=i.count;e<l;e++)g.fromBufferAttribute(i,e),g.applyMatrix4(t.matrixWorld),o.setFloat32(x,g.x,n.littleEndian),x+=4,o.setFloat32(x,g.y,n.littleEndian),x+=4,o.setFloat32(x,g.z,n.littleEndian),x+=4,!0===a&&(null!=r?(g.fromBufferAttribute(r,e),g.applyMatrix3(b).normalize(),o.setFloat32(x,g.x,n.littleEndian),x+=4,o.setFloat32(x,g.y,n.littleEndian),x+=4,o.setFloat32(x,g.z,n.littleEndian),x+=4):(o.setFloat32(x,0,n.littleEndian),x+=4,o.setFloat32(x,0,n.littleEndian),x+=4,o.setFloat32(x,0,n.littleEndian),x+=4)),!0===s&&(null!=f?(o.setFloat32(x,f.getX(e),n.littleEndian),x+=4,o.setFloat32(x,f.getY(e),n.littleEndian),x+=4):(o.setFloat32(x,0,n.littleEndian),x+=4,o.setFloat32(x,0,n.littleEndian),x+=4)),!0===u&&(null!=c?(d.fromBufferAttribute(c,e).convertLinearToSRGB(),o.setUint8(x,Math.floor(255*d.r)),x+=1,o.setUint8(x,Math.floor(255*d.g)),x+=1,o.setUint8(x,Math.floor(255*d.b)),x+=1):(o.setUint8(x,255),x+=1,o.setUint8(x,255),x+=1,o.setUint8(x,255),x+=1));if(!0===l)if(null!==p)for(let t=0,e=p.count;t<e;t+=3)o.setUint8(m,3),m+=1,o.setUint32(m,p.getX(t+0)+A,n.littleEndian),m+=4,o.setUint32(m,p.getX(t+1)+A,n.littleEndian),m+=4,o.setUint32(m,p.getX(t+2)+A,n.littleEndian),m+=4;else for(let t=0,e=i.count;t<e;t+=3)o.setUint8(m,3),m+=1,o.setUint32(m,A+t,n.littleEndian),m+=4,o.setUint32(m,A+t+1,n.littleEndian),m+=4,o.setUint32(m,A+t+2,n.littleEndian),m+=4;A+=i.count})),y=o.buffer}else{let t=0,e="",n="";r((function(i,r){const o=r.getAttribute("position"),f=r.getAttribute("normal"),p=r.getAttribute("uv"),y=r.getAttribute("color"),x=r.getIndex();b.getNormalMatrix(i.matrixWorld);for(let t=0,n=o.count;t<n;t++){g.fromBufferAttribute(o,t),g.applyMatrix4(i.matrixWorld);let n=g.x+" "+g.y+" "+g.z;!0===a&&(null!=f?(g.fromBufferAttribute(f,t),g.applyMatrix3(b).normalize(),n+=" "+g.x+" "+g.y+" "+g.z):n+=" 0 0 0"),!0===s&&(n+=null!=p?" "+p.getX(t)+" "+p.getY(t):" 0 0"),!0===u&&(null!=y?(d.fromBufferAttribute(y,t).convertLinearToSRGB(),n+=" "+Math.floor(255*d.r)+" "+Math.floor(255*d.g)+" "+Math.floor(255*d.b)):n+=" 255 255 255"),e+=n+"\n"}if(!0===l){if(null!==x)for(let e=0,i=x.count;e<i;e+=3)n+=`3 ${x.getX(e+0)+t}`,n+=` ${x.getX(e+1)+t}`,n+=` ${x.getX(e+2)+t}\n`;else for(let e=0,i=o.count;e<i;e+=3)n+=`3 ${t+e} ${t+e+1} ${t+e+2}\n`;c+=x?x.count/3:o.count/3}t+=o.count})),y=`${p}${e}${l?`${n}\n`:"\n"}`}return"function"==typeof e&&requestAnimationFrame((()=>e(y))),y}}}}]);