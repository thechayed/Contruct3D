"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[608],{8608:(e,t,r)=>{r.d(t,{STLLoader:()=>o});var n=r(9451);class o extends n.Loader{constructor(e){super(e)}load(e,t,r,o){const s=this,a=new n.FileLoader(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,(function(r){try{t(s.parse(r))}catch(t){o?o(t):console.error(t),s.manager.itemError(e)}}),r,o)}parse(e){function t(e,t,r){for(let n=0,o=e.length;n<o;n++)if(e[n]!==t.getUint8(r+n))return!1;return!0}const r=function(e){if("string"==typeof e){const t=new Uint8Array(e.length);for(let r=0;r<e.length;r++)t[r]=255&e.charCodeAt(r);return t.buffer||t}return e}(e);return function(e){const r=new DataView(e);if(84+50*r.getUint32(80,!0)===r.byteLength)return!0;const n=[115,111,108,105,100];for(let e=0;e<5;e++)if(t(n,r,e))return!1;return!0}(r)?function(e){const t=new DataView(e),r=t.getUint32(80,!0);let o,s,a,i,l,u,c,f,g=!1;for(let e=0;e<70;e++)1129270351==t.getUint32(e,!1)&&82==t.getUint8(e+4)&&61==t.getUint8(e+5)&&(g=!0,i=new Float32Array(3*r*3),l=t.getUint8(e+6)/255,u=t.getUint8(e+7)/255,c=t.getUint8(e+8)/255,f=t.getUint8(e+9)/255);const h=new n.BufferGeometry,d=new Float32Array(3*r*3),p=new Float32Array(3*r*3),w=new n.Color;for(let e=0;e<r;e++){const r=84+50*e,n=t.getFloat32(r,!0),f=t.getFloat32(r+4,!0),h=t.getFloat32(r+8,!0);if(g){const e=t.getUint16(r+48,!0);32768&e?(o=l,s=u,a=c):(o=(31&e)/31,s=(e>>5&31)/31,a=(e>>10&31)/31)}for(let l=1;l<=3;l++){const u=r+12*l,c=3*e*3+3*(l-1);d[c]=t.getFloat32(u,!0),d[c+1]=t.getFloat32(u+4,!0),d[c+2]=t.getFloat32(u+8,!0),p[c]=n,p[c+1]=f,p[c+2]=h,g&&(w.set(o,s,a).convertSRGBToLinear(),i[c]=w.r,i[c+1]=w.g,i[c+2]=w.b)}}return h.setAttribute("position",new n.BufferAttribute(d,3)),h.setAttribute("normal",new n.BufferAttribute(p,3)),g&&(h.setAttribute("color",new n.BufferAttribute(i,3)),h.hasColors=!0,h.alpha=f),h}(r):function(e){const t=new n.BufferGeometry,r=/solid([\s\S]*?)endsolid/g,o=/facet([\s\S]*?)endfacet/g,s=/solid\s(.+)/;let a=0;const i=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,l=new RegExp("vertex"+i+i+i,"g"),u=new RegExp("normal"+i+i+i,"g"),c=[],f=[],g=[],h=new n.Vector3;let d,p=0,w=0,b=0;for(;null!==(d=r.exec(e));){w=b;const e=d[0],r=null!==(d=s.exec(e))?d[1]:"";for(g.push(r);null!==(d=o.exec(e));){let e=0,t=0;const r=d[0];for(;null!==(d=u.exec(r));)h.x=parseFloat(d[1]),h.y=parseFloat(d[2]),h.z=parseFloat(d[3]),t++;for(;null!==(d=l.exec(r));)c.push(parseFloat(d[1]),parseFloat(d[2]),parseFloat(d[3])),f.push(h.x,h.y,h.z),e++,b++;1!==t&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+a),3!==e&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+a),a++}const n=w,i=b-w;t.userData.groupNames=g,t.addGroup(n,i,p),p++}return t.setAttribute("position",new n.Float32BufferAttribute(c,3)),t.setAttribute("normal",new n.Float32BufferAttribute(f,3)),t}("string"!=typeof(o=e)?(new TextDecoder).decode(o):o);var o}}}}]);